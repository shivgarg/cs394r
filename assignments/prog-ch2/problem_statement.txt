
Nonstationary Bandit Problem

In this programming assignment, you will design and conduct an experiment to demonstrate the difficulties that sample-average methods have for nonstationary problems. Use a modified version of the 10-armed testbed in which all the q*(a) start out equally at zero and then take independent random walks (for each q(a), add a random number sampled from N(0, 0.01^2)). When the arm is selected and pulled, the reward sampled from N(q*(a),1) will be provided to an agent.

With the modified nonstationary 10-armed testbed, test (1) an action-value method using sample averages, with incrementally computed and q estimates that all start from 0; and (2) an action-value method using a constant step-size parameter, alpha = 0.1. Use epsilon=0.1, and iterate 10,000 steps for each bandit. As was done in Figure 2.2, repeat both methods for 300 independent runs, and report (1) average rewards and (2) the ratio of optimal actions averaged over those 300 runs.

Note that each averaged value should represent the number for "each state" rather than cumulative statistics, such as moving average. If you are unsure about what does it mean, please see 2.2 of the textbook or, this and this posts.

You have to submit *.py code. The code will receive one command line argument, which is the output filename. Therefore, your code should be able to be run by

"python *.py result.out"

and it should generate one output file named result.out.
 
Your output file should contain 4 lines of numbers. The first and the second line represent the average rewards and ratio of optimal actions generated by action-value method using sample averages at each step. The third and the fourth line represent the same results with action-value method using constant step-size. Since we test it for 10,000 steps, each row should contain exactly 10,000 numbers. (Hint: use numpy.savetxt(fname, data_array) to write such results.)
 
We attached the visualization code so that you can test your results and confirm your code is auto-gradable. Run the visualization code with the output filename, for example:

"python ex2_5_plot.py result.out"
